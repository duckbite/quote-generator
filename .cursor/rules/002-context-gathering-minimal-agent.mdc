---
description: When operating within a large codebase using advanced Generative AI patterns and libraries, this rule ensures efficient context gathering using Cursor IDE tools. Apply this rule when you need to understand codebase structure, identify relevant libraries, or gather context for coding tasks. This rule prevents defaulting to outdated patterns while ensuring you use the latest 2025 updates and releases, and maximizes rapid context gathering through parallelized discoveries.
globs:
alwaysApply: true
tags: [core, context, search, efficiency]
priority: 2
---

<context_gathering>
Goal: Get enough context fast. Parallelize discovery and stop as soon as you can act.

Method:

- Start broad, then fan out to focused subqueries.
- In parallel, launch varied queries; read top hits per query. Deduplicate paths and cache; don’t repeat queries.
- Avoid over searching for context. If needed, run targeted searches in one parallel batch.

Early stop criteria:

- You can name exact content to change.
- Top hits converge (~70%) on one area/path.

Escalate once:

- If signals conflict or scope is fuzzy, run one refined parallel batch, then proceed.

Depth:

- Trace only symbols you’ll modify or whose contracts you rely on; avoid transitive expansion unless necessary.

Loop:

- Batch search → minimal plan → complete task.
- Search again only if validation fails or new unknowns appear. Prefer acting over more searching.
  </context_gathering>
